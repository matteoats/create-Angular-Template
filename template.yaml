apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-angular-app-template-azure
  title: Create Angular App Template (Azure)
  description: Create a new Angular website project with Azure repository
  tags:
    - angular
    - azure
spec:
  owner: web@example.com
  type: website
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
        - organization
        - project
        - repoName
        - authorEmail  # New parameter for author's email
        - authorName   # New parameter for author's name
      properties:
        workspace:
          title: Workspace
          type: string
          description: La mia Workspace.
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
        organization:
          title: Azure DevOps Organization
          type: string
          description: The Azure DevOps organization
        project:
          title: Azure DevOps Project
          type: string
          description: The Azure DevOps project
        repoName:
          title: Repository Name
          type: string
          description: The name of the repository to create
        authorEmail:   # New parameter
          title: Author Email
          type: string
          description: Email address of the repository author
        authorName:    # New parameter
          title: Author Name
          type: string
          description: Name of the repository author
  steps:
    - id: pullRequestAzureRepo
      name: Create a Pull Request to Azure Repo
      action: azure:repo:pr
      input:
        sourceBranch: "main"
        targetBranch: "main"
        repoId: ${{ parameters.repoName }}
        title: ${{ parameters.name }}
        project: ${{ parameters.project }}
        supportsIterations: false

#    - id: cloneAzureRepo
#      name: Clone Azure Repo
#      action: azure:repo:clone
#      input:
#        remoteUrl: "https://${{ parameters.organization }}@dev.azure.com/${{ parameters.organization }}/${{ parameters.project }}/_git/${{ parameters.repoName }}"
#        branch: "main"
#        targetPath: ./sub-directory
        
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          organization: ${{ parameters.organization }}
          project: ${{ parameters.project }}
          authorEmail: ${{ parameters.authorEmail }}  # Pass author email
          authorName: ${{ parameters.authorName }}    # Pass author name
    
    - id: pushAzureRepo
      name: Push to Remote Azure Repo
      action: azure:repo:push
      input:
        branch: "main"
        sourcePath: ./sub-directory
        gitCommitMessage: Add project files

#    - id: publish
#      name: Publish to Azure
#      action: publish:azure
#      input:
#        description: This is ${{ parameters.component_id }}
#        repoUrl: dev.azure.com/${{ parameters.owner }}/${{ parameters.organization }}/${{ parameters.project }}/_git/${{ parameters.repoName }}
#        gitAuthorEmail: ${{ parameters.authorEmail }}  # Pass author email
#        gitAuthorName: ${{ parameters.authorName }}    # Pass author name
#        token: ${{ secrets.AZURE_DEVOPS_TOKEN }}
#        gitCommitMessage: "Initial commit for ${{ parameters.component_id }}"
#        defaultBranch: main
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: "dev.azure.com?owner=${{ parameters.project }}&repo=${{ parameters.repoName }}&organization=${{ parameters.organization }}&version=main"
        catalogInfoPath: "/skeleton/catalog-info.yaml"
  output:
    links:
      - title: Repository
        url: "dev.azure.com?owner=${{ parameters.project }}&repo=${{ parameters.repoName }}&organization=${{ parameters.organization }}"
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
